using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Platformer2D.Level;
using Platformer2D.Inventory;

namespace Platformer2D.Platform
{
    public class DoorController
    {
        protected DoorModel model;
        protected DoorView view;

        private bool isPlayerInside = false;
        protected bool isCorrectActiveSlot = false;
        protected InventorySlot activeslot;

        public DoorController(DoorModel model, DoorView view)
        {
            this.model = model; 
            this.view = view;
            // Подписка на событие обновления счета
            //Bus.Instance.SendPlatformsScore += HandleScoreUpdate;
        }

        // Обработка события текущего счета
        /*private void HandleScoreUpdate(int score)
        {
            if (score >= model.TargetScore) view.ChangeState();
        }*/

        public bool IsColor()
        {
            return model.IsColor;
        }

        internal virtual void Update()
        {
            if (!model.IsOpen)
            {
                if (isCorrectActiveSlot) 
                {
                    CameraManager.Instance.UpadteText($"Press F to {model.NextLocation.Item1} Room");
                    CameraManager.Instance.SetActive(true);
                    if(Input.GetKeyDown(KeyCode.F))
                    {
                        if (activeslot.Count >= model.CountForOpen)
                        {
                            //Debug.Log("Door Opened");
                            model.IsOpen = true;
                            CameraManager.Instance.SetActive(false);
                            InventoryView.Instance.DecrementSlot(activeslot.locationType, model.CountForOpen);
                            InventoryView.Instance.IncrementSlot(LocationType.Default);
                        }
                        else
                        {
                            CameraManager.Instance.UpadteText($"not enough crystals");
                            CameraManager.Instance.SetActive(true);
                            //Debug.Log("not enough crystals");
                        }
                    }
                }
            }
            else
            {
                if (isPlayerInside )
                {
                    CameraManager.Instance.UpadteText($"Press Enter to {model.NextLocation.Item1} Room");
                    CameraManager.Instance.SetActive(true);
                    if (Input.GetKeyDown(KeyCode.Return))
                    {
                        CameraManager.Instance.SetActive(false);
                        int newIndex = model.NextLocation.Item1;
                        Debug.Log($"New location index: {newIndex}");
                        Bus.Instance.SendNextIndexLocation(newIndex);
                    }
                }
                else
                {
                    CameraManager.Instance.SetActive(false);
                }
                
            }
            
        }

        public void OnTriggerEnter2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                activeslot = InventoryView.Instance.GetActiveSlot();
                CameraManager.Instance.UpadteText($"Need: {model.CountForOpen} to {model.NextLocation.Item1} Room");
                CameraManager.Instance.SetActive(true);
                if (activeslot != null && (activeslot.locationType == model.CurrentLocation.Item2 || activeslot.locationType == model.NextLocation.Item2))
                {
                    //Debug.Log("Active correctSlot");
                    
                    isCorrectActiveSlot = true;
                }
            }
        }

        public void OnTriggerStay2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                Debug.Log("OnTriggerStay2D(Player)");
                if (model.IsOpen)
                {
                    isPlayerInside = true;
                }
            }
        }

        public void OnTriggerExit2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                Debug.Log("Deactive correctSlot");
                CameraManager.Instance.SetActive(false);
                isCorrectActiveSlot = false;
                 isPlayerInside = false;
                //Debug.Log("Player has exited the door trigger");
            }
        }

        public int GetCountCrystal()
        {
            return model.CountForOpen;
        }
    }

}
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Platformer2D.Level;
using Platformer2D.Inventory;

namespace Platformer2D.Platform
{
    public class DoorController
    {
        protected DoorModel model;
        protected DoorView view;

        private bool isPlayerInside = false;
        protected bool isCorrectActiveSlot = false;
        protected InventorySlot activeslot;

        public DoorController(DoorModel model, DoorView view)
        {
            this.model = model; 
            this.view = view;
            // Подписка на событие обновления счета
            //Bus.Instance.SendPlatformsScore += HandleScoreUpdate;
        }

        public bool IsColor()
        {
            return model.IsColor;
        }

        internal virtual void Update()
        {
            if (isPlayerInside)
            {
                CheckActiveSlot();
                HandleDoorInteraction();
            }
            else
            {
                CameraManager.Instance.SetActive(false);
            }
            
        }

        private void CheckActiveSlot()
        {
            activeslot = InventoryView.Instance.GetActiveSlot();
            if (activeslot != null && (activeslot.locationType == model.CurrentLocation.Item2 || activeslot.locationType == model.NextLocation.Item2))
            {
                isCorrectActiveSlot = true;
                //CameraManager.Instance.SetActive(false);
            }
            else
            {
                isCorrectActiveSlot = false;
                CameraManager.Instance.UpadteText("Incorrect Inventory slot selected");
                CameraManager.Instance.SetActive(true);
            }
        }

        private void HandleDoorInteraction()
        {
            if (!model.IsOpen)
            {
                if (isCorrectActiveSlot) 
                {
                    if(activeslot.Count < model.CountForOpen)
                    {
                        CameraManager.Instance.UpadteText("Not enough crystal");
                        CameraManager.Instance.SetActive(true);
                    }
                    else
                    {
                        OpenDoorWithFKey();
                    }
                }
            }
            else
            {
                if (isPlayerInside)
                {
                    EnterNextRoomWithEnterKey();
                }
                else
                {
                    CameraManager.Instance.SetActive(false);
                }
            }
        }

        private void OpenDoorWithFKey()
        {
            CameraManager.Instance.UpadteText($"Press F to {model.NextLocation.Item1} Room");
            CameraManager.Instance.SetActive(true);
            if(Input.GetKeyDown(KeyCode.F))
            {
                model.IsOpen = true;
                CameraManager.Instance.SetActive(false);
                InventoryView.Instance.DecrementSlot(activeslot.locationType, model.CountForOpen);
                InventoryView.Instance.IncrementSlot(LocationType.Default);
                view.ChangeState();
            }
        }

        private void EnterNextRoomWithEnterKey()
        {
            CameraManager.Instance.UpadteText($"Press Enter to {model.NextLocation.Item1} Room");
            CameraManager.Instance.SetActive(true);
            if (Input.GetKeyDown(KeyCode.Return))
            {
                CameraManager.Instance.SetActive(false);
                int newIndex = model.NextLocation.Item1;
                Debug.Log($"Next location index: {newIndex}");
                Bus.Instance.SendNextIndexLocation(newIndex);
            }
        }

        public void OnTriggerEnter2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                isPlayerInside = true;
                //CameraManager.Instance.UpadteText($"Need: {model.CountForOpen} to {model.NextLocation.Item1} Room");
                //CameraManager.Instance.SetActive(true);
            }
        }

        public void OnTriggerStay2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                isPlayerInside = true;
            }
        }

        public void OnTriggerExit2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                CameraManager.Instance.SetActive(false);
                isCorrectActiveSlot = false;
                isPlayerInside = false;
            }
        }

        public int GetCountCrystal()
        {
            return model.CountForOpen;
        }
    }

}
using System.Collections;
using System.Collections.Generic;
using Platformer2D.Inventory;

using UnityEngine;
namespace Platformer2D.Platform
{
    public class ChestController 
    {
        ChestModel model;
        ChestView view;
        protected bool isCorrectActiveSlot = false;
        protected bool isPlayerInside = false;
        protected InventorySlot activeslot;
        public ChestController(ChestModel model, ChestView view)
        {
            this.model = model;
            this.view = view;

        }
        
        internal void Update()
        {
            if (!model.IsOpen)
            {
                if (isCorrectActiveSlot)
                {
                    CameraManager.Instance.UpadteText($"Press F for chest");
                    CameraManager.Instance.SetActive(true);
                    if (Input.GetKeyDown(KeyCode.F))
                    {
                        if (activeslot.Count >= model.TargetScore)
                        {
                            model.IsOpen = true;
                            InventoryView.Instance.DecrementSlot(view.type, model.TargetScore);
                        }
                    }
                    
                    else
                    {
                        CameraManager.Instance.UpadteText($"Not count");
                        CameraManager.Instance.SetActive(true);
                    }
                }
            }
            else
            {
                if (isPlayerInside && Input.GetKeyDown(KeyCode.Return))
                {
                    CameraManager.Instance.SetActive(false);
                    Debug.Log($"GameWin");
                    EndGame();
                }
            }
        }

        public void EndGame()
        {
            Bus.Instance.SendGameWin(Player.PlayerController.Instance.SendTotalScore());
        }

        public  void OnTriggerEnter2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                activeslot = InventoryView.Instance.GetActiveSlot();
                CameraManager.Instance.UpadteText($"Need: {model.TargetScore}");
                CameraManager.Instance.SetActive(true);
                if (activeslot != null && (activeslot.locationType == LocationType.Default))
                {
                    //Debug.Log("Active correctSlot");
                    
                    isCorrectActiveSlot = true;
                }
            }
        }

        public void OnTriggerStay2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                Debug.Log("OnTriggerStay2D(Player)");
            if (model.IsOpen)
            {
                CameraManager.Instance.UpadteText($"Press Enter");
                CameraManager.Instance.SetActive(true);

                isPlayerInside = true;
            }
            }
        }

        public void OnTriggerExit2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("Player"))
            {
                Debug.Log("OnTriggerStay2D(Player)");
            if (model.IsOpen)
            {
                CameraManager.Instance.SetActive(false);

                isPlayerInside = false;
            }
            }
        }

    }

}
