void FixedUpdate()
        {
            BoxCollider2D boxCollider = GetComponent<BoxCollider2D>();
            // Проверка, находится ли игрок на земле
            Vector2 boxSize = boxCollider.size;
            Vector2 boxPosition = boxCollider.offset;
            // Находим нижнюю точку коллайдера персонажа
            Vector2 bottomPoint = new Vector2(boxPosition.x- boxPosition.x/ 2, boxPosition.y - boxSize.y / 2);

            // Создаем два рейкаста вниз на короткое расстояние от нижней точки коллайдера
            Vector2 leftRaycastOrigin = new Vector2(bottomPoint.x - boxSize.x / 2, bottomPoint.y);
            Vector2 rightRaycastOrigin = new Vector2(bottomPoint.x + boxSize.x / 2, bottomPoint.y);

            // Создаем ContactFilter2D, чтобы исключить персонажа из рейкаста
            ContactFilter2D contactFilter = new ContactFilter2D();
            contactFilter.SetLayerMask(Physics2D.GetLayerCollisionMask(gameObject.layer));
            contactFilter.useLayerMask = true;

            // Проводим BoxCast вниз
            RaycastHit2D[] leftHits = new RaycastHit2D[1];
            RaycastHit2D[] rightHits = new RaycastHit2D[1];
            int leftHitCount = Physics2D.BoxCast(leftRaycastOrigin, new Vector2(0.2f, 0.2f), 0f, Vector2.down, contactFilter, leftHits, 0.1f);
            int rightHitCount = Physics2D.BoxCast(rightRaycastOrigin, new Vector2(0.2f, 0.2f), 0f, Vector2.down, contactFilter, rightHits, 0.1f);

            // Проверяем, находится ли персонаж на земле
            
            bool isGrounded = leftHitCount > 0 || rightHitCount > 0;
            Debug.Log("Is player grounded: " + isGrounded);
            controller.CheckGround(isGrounded);
            
        }